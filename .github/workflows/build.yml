on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
name: Test, Build and Release apk
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Cache Flutter
      id: flutter-cache
      uses: actions/cache@v1.1.2
      with:
        # A directory to store and save the cache
        path: $GITHUB_WORKSPACE/lib/flutter
        # An explicit key for restoring and saving the cache
        key: flutter
        restore-key: flutter
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: Setup Flutter
      if: steps.flutter-cache.outputs.cache-hit != 'true'
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://github.com/flutter/flutter.git lib/flutter
        cd lib/flutter
        git checkout stable # <--- Flutter version to use
        cd $GITHUB_WORKSPACE #be ready for the build job
    - name: Flutter Doctor; set path
      run: |
        export PATH="$PATH:$GITHUB_WORKSPACE/lib/flutter/bin"
        flutter doctor
        echo ::set-env name=PATH::$PATH
    - name: Get dependencies
      run: flutter pub get #TODO: figure out how to cache this
    #- name: Run test
    #  run: flutter test
    # It uses the tests under $GITHUB_WORKSPACE/tests, which don't exist
    - name: Build APKs
      run: flutter build apk --debug --split-per-abi
    - name: Upload artifact megazip
      uses: actions/upload-artifact@v1.0.0
      with:
        # Artifact name
        name: pangolin-desktop-apks.zip
        # Directory containing files to upload
        path: build/app/outputs/apk/debug/
    - name: Upload release
      uses: softprops/action-gh-release@v1
      with:
        prerelease: yes
        tag: ${{ github.sha }}
        files: |
          build/app/outputs/apk/debug/app-arm64-v8a-debug.apk
          build/app/outputs/apk/debug/app-armeabi-v7a-debug.apk
          build/app/outputs/apk/debug/app-x86_64-debug.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
